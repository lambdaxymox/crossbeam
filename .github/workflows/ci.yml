name: CI

on:
  pull_request:
  push:
    branches:
      - staging
      - trying
  schedule:
    - cron: '0 1 * * *'

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  # Test crates on their minimum Rust versions and nightly Rust.
  test:
    name: test
    env:
      RUST_VERSION: ${{ matrix.rust }}
      TARGET: ${{ matrix.target }}
    strategy:
      matrix:
        include:
          - rust: 1.36.0
            os: ubuntu-latest
          - rust: 1.36.0
            os: windows-latest
          - rust: stable
            os: ubuntu-latest
          - rust: stable
            os: windows-latest
          - rust: nightly
            os: ubuntu-latest
          # TODO: https://github.com/crossbeam-rs/crossbeam/pull/518#issuecomment-633342606
          # - rust: nightly
          #   os: macos-latest
          - rust: nightly
            os: windows-latest
          - rust: nightly
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - rust: nightly
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        # --no-self-update is necessary because the windows environment cannot self-update rustup.exe.
        run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      - name: Test
        run: ./ci/test.sh

  # Check all feature combinations works properly.
  features:
    name: features
    env:
      RUST_VERSION: ${{ matrix.rust }}
    strategy:
      matrix:
        rust:
          - 1.36.0
          - nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Check features
        run: ./ci/check-features.sh

  # Check for duplicate dependencies.
  dependencies:
    name: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update nightly && rustup default nightly
      - name: dependency tree check
        run: ./ci/dependencies.sh

  # Check formatting.
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: rustfmt
        run: ./ci/rustfmt.sh

  # Check clippy.
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: clippy
        run: ./ci/clippy.sh

  # Run miri.
  miri:
    name: miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: miri
        run: ./ci/miri.sh

  # Run sanitizers.
  san:
    name: san
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update nightly && rustup default nightly
      - name: Run sanitizers
        run: ./ci/san.sh

  # Run loom tests.
  loom:
    name: loom
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: loom
        run: ./ci/crossbeam-epoch-loom.sh

  # Check if the document can be generated without warning.
  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update nightly && rustup default nightly
      - name: docs
        run: ./ci/docs.sh

  # This job doesn't actually test anything, but they're used to tell bors the
  # build completed, as there is no practical way to detect when a workflow is
  # successful listening to webhooks only.
  #
  # ALL THE PREVIOUS JOBS NEEDS TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - test
      - features
      - dependencies
      - rustfmt
      - clippy
      - miri
      - san
      - loom
      - docs
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0
